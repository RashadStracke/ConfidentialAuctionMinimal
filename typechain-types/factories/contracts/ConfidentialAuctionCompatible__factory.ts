/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialAuctionCompatible,
  ConfidentialAuctionCompatibleInterface,
} from "../../contracts/ConfidentialAuctionCompatible";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctionBids",
    outputs: [
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "ConfidentialAuctionCompatible.euint64",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "ConfidentialAuctionCompatible.ebool",
        name: "isHighBid",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "ConfidentialAuctionCompatible.euint64",
        name: "highestBidAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidCount",
        type: "uint256",
      },
      {
        internalType: "ConfidentialAuctionCompatible.ebool",
        name: "isHighBid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_minimumBid",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionBasicInfo",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getBidCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getHighestBidAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getHighestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAuctionCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activeAuctionCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserAuctions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasUserBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "hasUserBidOnAuction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAuctionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isHighBid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_bidAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_comments",
        type: "string",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001f5760016004555f60055561160790816100248239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063045af3341461133d57806316002f4a1461132057806324600fc3146112995780633f40efdc14610db257806346c3fb7314610cf6578063571a26a014610bf55780635f93de4914610b58578063744d341114610b0f57806375b6a06e146104215780637765c52c1461039d5780637ca7cc5714610301578063981b3ae71461034a578063a65ed0d614610301578063b4fbe80a146102ad578063b9a2de3a14610200578063c750cb79146101ae578063fc528482146101915763ff3ad0b4146100df575f80fd5b3461018d5760208060031936011261018d576001600160a01b03610101611575565b165f526002815260405f20604051908183825491828152019081925f52845f20905f5b8682821061017957868661013a828803836113b8565b60405192839281840190828552518091526040840192915f5b82811061016257505050500390f35b835185528695509381019392810192600101610153565b835485529093019260019283019201610124565b5f80fd5b3461018d575f36600319011261018d576020600454604051908152f35b3461018d57602036600319011261018d57600435801515806101f5575b6101d4906115ae565b5f525f60205260206001600160a01b03600a60405f20015416604051908152f35b5060045481106101cb565b3461018d57602036600319011261018d57600435801515806102a2575b610226906115ae565b805f525f6020526001600160a01b03600560405f20015416330361025d575f525f602052600760405f200160ff1981541690555f80f35b60405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792063726561746f722063616e20656e642061756374696f6e000000006044820152606490fd5b50600454811061021d565b3461018d57604036600319011261018d576102c6611575565b6001600160a01b0360243591165f52600260205260405f20805482101561018d576020916102f39161158b565b90546040519160031b1c8152f35b3461018d57604036600319011261018d576001600160a01b03610322611575565b165f52600360205260405f206024355f52602052602060ff60405f2054166040519015158152f35b3461018d57602036600319011261018d5760043580151580610392575b610370906115ae565b5f525f602052602067ffffffffffffffff600960405f20015416604051908152f35b506004548110610367565b3461018d57602036600319011261018d5760043580151580610416575b6103c3906115ae565b5f525f602052608060405f2060068101549060ff6007820154169081610408575b600b6008820154910154916040519384521515602084015260408301526060820152f35b6008810154421091506103e4565b5060045481106103ba565b3461018d57608036600319011261018d5760043567ffffffffffffffff811161018d576104529036906004016113da565b60243567ffffffffffffffff811161018d576104729036906004016113da565b60443567ffffffffffffffff811161018d576104929036906004016113da565b825115610aca57815115610a855760643515610a35576004549162093a8042014211610a21576040516101a0810181811067ffffffffffffffff8211176107ba576040528381526020810191858352604082015282606082015260643560808201523360a08201524260c0820152600160e082015262093a8042016101008201525f6101208201525f6101408201525f6101608201525f610180820152835f525f60205260405f2091815183555180519067ffffffffffffffff82116107ba578190610561600186015461146e565b601f81116109d1575b50602090601f8311600114610963575f92610958575b50508160011b915f199060031b1c19161760018301555b604081015180519067ffffffffffffffff82116107ba5781906105bd600286015461146e565b601f8111610908575b50602090601f831160011461089a575f9261088f575b50508160011b915f199060031b1c19161760028301555b606081015180519067ffffffffffffffff82116107ba57610617600385015461146e565b601f811161084b575b50602090601f83116001146107d9579180600c9492610180945f926107ce575b50508160011b915f199060031b1c19161760038501555b60808101516004850155600584016001600160a01b03908160a0840151169073ffffffffffffffffffffffffffffffffffffffff19918282541617905560c083015160068701556106bd60e08401511515600788019060ff801983541691151516179055565b61010083015160088701556101208301516009870155600a8601916101408401511690825416179055610160810151600b8501550151910155335f52600260205260405f2090815490680100000000000000008210156107ba5761074b827f7ee613409a3818be8eb068049ae12d5fa12b0bb8b240a3f0488a0d2509c9fc7d94600161079e9501815561158b565b81549060031b9086821b915f19901b191617905561076a6005546115a0565b6005556107786004546115a0565b60045561079060405195608087526080870190611430565b908582036020870152611430565b92606435604082015262093a80420160608201528033940390a3005b634e487b7160e01b5f52604160045260245ffd5b015190508980610640565b90600385015f5260205f20915f5b601f1985168110610833575092600c94926001926101809583601f1981161061081b575b505050811b016003850155610657565b01515f1960f88460031b161c1916905589808061080b565b919260206001819286850151815501940192016107e7565b600385015f5260205f20601f840160051c810160208510610888575b601f830160051c8201811061087d575050610620565b5f8155600101610867565b5080610867565b0151905087806105dc565b9250600285015f5260205f20905f935b601f19841685106108ed576001945083601f198116106108d5575b505050811b0160028301556105f3565b01515f1960f88460031b161c191690558780806108c5565b818101518355602094850194600190930192909101906108aa565b909150600285015f5260205f20601f840160051c810160208510610951575b90849392915b601f830160051c820181106109435750506105c6565b5f815585945060010161092d565b5080610927565b015190508780610580565b9250600185015f5260205f20905f935b601f19841685106109b6576001945083601f1981161061099e575b505050811b016001830155610597565b01515f1960f88460031b161c1916905587808061098e565b81810151835560209485019460019093019290910190610973565b909150600185015f5260205f20601f840160051c810160208510610a1a575b90849392915b601f830160051c82018110610a0c57505061056a565b5f81558594506001016109f6565b50806109f0565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152602260248201527f4d696e696d756d20626964206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f5469746c652063616e6e6f7420626520656d70747900000000000000000000006044820152606490fd5b3461018d57602036600319011261018d5760043580151580610b4d575b610b35906115ae565b5f525f6020526020600b60405f200154604051908152f35b506004548110610b2c565b3461018d57604036600319011261018d576024356004355f52600160205260405f2090815481101561018d57610b8d91611548565b506001600160a01b038154166001820154916002810154610be4610bb3600384016114a6565b60ff60056004860154950154169260405196879687526020870152604086015260c0606086015260c0850190611430565b916080840152151560a08301520390f35b3461018d57602036600319011261018d576004355f525f60205260405f20805460018201610c22906114a6565b91610c2f600282016114a6565b610c3b600383016114a6565b916004810154926001600160a01b03806005840154166006840154600785015460ff1690600886015492600987015494600a8801541695600b88015497600c0154986040519c8d809d6101a09182918152602001528d01610c9b91611430565b8c810360408e0152610cac91611430565b8b810360608d0152610cbd91611430565b9860808b015260a08a015260c0890152151560e08801526101008701526101208601526101408501526101608401526101808301520390f35b3461018d57602036600319011261018d5760043580151580610da7575b610d1c906115ae565b5f525f602052610d7c60405f2060048101546001600160a01b03600583015416610d98610d4b600185016114a6565b93610d8a610d676003610d60600285016114a6565b93016114a6565b9160405197889760a0895260a0890190611430565b908782036020890152611430565b908582036040870152611430565b91606084015260808301520390f35b506004548110610d13565b608036600319011261018d5760248035600435811515820361018d5767ffffffffffffffff9260443560643585811161018d57610df39036906004016113da565b918315158061128e575b610e06906115ae565b835f526020955f875260ff600760405f200154161561124a57845f525f8752600860405f20015442101561120657845f525f8752600460405f20015483106111c25782341061117e57845f525f875260405f209581841690805f146111765760ff60015b169481611166575b50611134575b60019384895260405f20926040519460c0860186811083821117611120576040523386528a8601938452604086019283526060860192888452608087019442865260a08801965f88528054906801000000000000000082101561110d5790610ee4918b82018155611548565b9890986110fb576001600160a01b0390511673ffffffffffffffffffffffffffffffffffffffff1989541617885551888801555160028701556003860192519081519283116110e85750610f38835461146e565b601f81116110a2575b508a90601f83116001146110105793600b9693836005947f6b2bb881d5dc46b346ff12ca5b8dc9e337a56cf5d6137d55d8317ef2060f9cbc9c9d9894610fb7985f92611005575b50505f19600383901b1c1916908a1b1790555b51600484015551151591019060ff801983541691151516179055565b01610fc281546115a0565b9055335f526003855260405f20845f52855260405f209060ff19825416179055610ff760405191604083526040830190611430565b9342908201528033940390a3005b015190508f80610f88565b5f8481528c8120929190601f198516908e5b82821061108b575050847f6b2bb881d5dc46b346ff12ca5b8dc9e337a56cf5d6137d55d8317ef2060f9cbc9c9d9894610fb79894600b9b98946005988e9510611073575b505050811b019055610f9b565b01515f1960f88460031b161c191690558f8080611066565b808c86978294978701518155019601940190611022565b835f528b5f20601f840160051c8101918d85106110de575b601f0160051c019088905b8281106110d3575050610f41565b5f81550188906110c5565b90915081906110ba565b634e487b7160e01b5f9081526041600452fd5b83634e487b7160e01b5f525f6004525ffd5b84634e487b7160e01b5f5260416004525ffd5b50634e487b7160e01b5f9081526041600452fd5b806009880155600a87013373ffffffffffffffffffffffffffffffffffffffff1982541617905583600c880155610e78565b9050826009890154161089610e72565b60ff5f610e6a565b60405162461bcd60e51b8152600481018890526014818401527f496e73756666696369656e74207061796d656e740000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260048101889052600b818401527f42696420746f6f206c6f770000000000000000000000000000000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018890526011818401527f41756374696f6e2068617320656e6465640000000000000000000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018890526015818401527f41756374696f6e206973206e6f742061637469766500000000000000000000006044820152606490fd5b506004548410610dfd565b3461018d575f36600319011261018d573033036112db575f808080478181156112d2575b3390f1156112c757005b6040513d5f823e3d90fd5b506108fc6112bd565b60405162461bcd60e51b815260206004820152601360248201527f4f6e6c7920636f6e7472616374206f776e6572000000000000000000000000006044820152606490fd5b3461018d575f36600319011261018d576020600554604051908152f35b3461018d575f36600319011261018d575f6001906001600454905b818110611372576040836005549082519182526020820152f35b8084915f525f60205260405f2060ff60078201541690816113aa575b5061139a575b01611358565b926113a4906115a0565b92611394565b60089150015442108661138e565b90601f8019910116810190811067ffffffffffffffff8211176107ba57604052565b81601f8201121561018d5780359067ffffffffffffffff82116107ba576040519261140f601f8401601f1916602001856113b8565b8284526020838301011161018d57815f926020809301838601378301015290565b91908251928382525f5b84811061145a575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161143a565b90600182811c9216801561149c575b602083101461148857565b634e487b7160e01b5f52602260045260245ffd5b91607f169161147d565b9060405191825f82546114b88161146e565b908184526020946001916001811690815f1461152657506001146114e8575b5050506114e6925003836113b8565b565b5f90815285812095935091905b81831061150e5750506114e693508201015f80806114d7565b855488840185015294850194879450918301916114f5565b925050506114e694925060ff191682840152151560051b8201015f80806114d7565b8054821015611561575f52600660205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b600435906001600160a01b038216820361018d57565b8054821015611561575f5260205f2001905f90565b5f198114610a215760010190565b156115b557565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642061756374696f6e20494400000000000000000000000000006044820152606490fdfea164736f6c6343000818000a";

type ConfidentialAuctionCompatibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialAuctionCompatibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialAuctionCompatible__factory extends ContractFactory {
  constructor(...args: ConfidentialAuctionCompatibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfidentialAuctionCompatible & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialAuctionCompatible__factory {
    return super.connect(runner) as ConfidentialAuctionCompatible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialAuctionCompatibleInterface {
    return new Interface(_abi) as ConfidentialAuctionCompatibleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialAuctionCompatible {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialAuctionCompatible;
  }
}
