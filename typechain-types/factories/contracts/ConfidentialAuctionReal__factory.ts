/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialAuctionReal,
  ConfidentialAuctionRealInterface,
} from "../../contracts/ConfidentialAuctionReal";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctionBids",
    outputs: [
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "ebool",
        name: "isHighBid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "comments",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "euint64",
        name: "highestBidAmount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bidCount",
        type: "uint256",
      },
      {
        internalType: "ebool",
        name: "isHighBid",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_minimumBid",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionInfo",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minimumBid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getBidCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "getHighestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAuctionCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activeAuctionCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserAuctions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasUserBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "hasUserBidOnAuction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAuctionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isHighBid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_bidAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_comments",
        type: "string",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userAuctions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461019b575f606061001461019f565b828152826020820152826040820152015261002d61019f565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d595806020830152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9182604082015273bc91f3dad1a5f19f8390c400196e58073b6a0bc4938491015260018060a01b0319937fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60090858254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60190848254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60290838254161790557fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea603908282541617905573a02cda4ca3a71d7c46997716f4283aa851c288127f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009182541617905560016004555f6005556040516117f090816101d38239f35b5f80fd5b60405190608082016001600160401b038111838210176101be57604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063045af334146114ac57806316002f4a1461148f57806324600fc3146114135780633f40efdc14610e46578063571a26a014610d455780635f93de4914610ca8578063744d341114610c5f57806375b6a06e146104345780637ca7cc57146103eb578063a65ed0d6146103eb578063b4fbe80a14610397578063b9a2de3a146102ea578063c750cb7914610298578063fc3fc4ed14610198578063fc5284821461017b5763ff3ad0b4146100c9575f80fd5b3461017757602080600319360112610177576001600160a01b036100eb6116e4565b165f526002815260405f20604051908183825491828152019081925f52845f20905f5b8682821061016357868661012482880383611527565b60405192839281840190828552518091526040840192915f5b82811061014c57505050500390f35b83518552869550938101939281019260010161013d565b83548552909301926001928301920161010e565b5f80fd5b34610177575f366003190112610177576020600454604051908152f35b34610177576020366003190112610177576004358015158061028d575b6101be9061171d565b5f525f60205261023e60405f2060048101546001600160a01b03600583015416600683015460ff60078501541680610280575b600885015491600b8601549361025a61020c600189016115d7565b9761024c6102286003610221600285016115d7565b93016115d7565b916040519b8c9b8c6101208091528d0190611679565b908b820360208d0152611679565b9089820360408b0152611679565b956060880152608087015260a0860152151560c085015260e08401526101008301520390f35b50600884015442106101f1565b5060045481106101b5565b3461017757602036600319011261017757600435801515806102df575b6102be9061171d565b5f525f60205260206001600160a01b03600a60405f20015416604051908152f35b5060045481106102b5565b34610177576020366003190112610177576004358015158061038c575b6103109061171d565b805f525f6020526001600160a01b03600560405f200154163303610347575f525f602052600760405f200160ff1981541690555f80f35b60405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792063726561746f722063616e20656e642061756374696f6e000000006044820152606490fd5b506004548110610307565b34610177576040366003190112610177576103b06116e4565b6001600160a01b0360243591165f52600260205260405f208054821015610177576020916103dd916116fa565b90546040519160031b1c8152f35b34610177576040366003190112610177576001600160a01b0361040c6116e4565b165f52600360205260405f206024355f52602052602060ff60405f2054166040519015158152f35b346101775760803660031901126101775760043567ffffffffffffffff811161017757610465903690600401611549565b60243567ffffffffffffffff811161017757610485903690600401611549565b60443567ffffffffffffffff8111610177576104a5903690600401611549565b825115610c1a57815115610bd55760643515610b85576004549162093a8042014211610b71575f60206001600160a01b037fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015416604460405180948193639cd07acb60e01b8352816004840152600560248401525af18015610b34575f90610b3f575b5f915060206001600160a01b037fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015416604460405180958193639cd07acb60e01b83528160048401528160248401525af1918215610b34575f92610b00575b5060405192836101a081011067ffffffffffffffff6101a086011117610899576101a08401604052858452866020850152604084015283606084015260643560808401523360a08401524260c0840152600160e084015262093a8042016101008401526101208301525f6101408301525f610160830152610180820152825f525f60205260405f209080518255602081015180519067ffffffffffffffff821161089957819061063a600186015461159f565b601f8111610ab0575b50602090601f8311600114610a42575f92610a37575b50508160011b915f199060031b1c19161760018301555b604081015180519067ffffffffffffffff8211610899578190610696600286015461159f565b601f81116109e7575b50602090601f8311600114610979575f9261096e575b50508160011b915f199060031b1c19161760028301555b606081015180519067ffffffffffffffff8211610899576106f0600385015461159f565b601f811161092a575b50602090601f83116001146108b8579180600c9492610180945f926108ad575b50508160011b915f199060031b1c19161760038501555b60808101516004850155600584016001600160a01b0360a0830151169073ffffffffffffffffffffffffffffffffffffffff19918282541617905560c0820151600686015561079460e08301511515600787019060ff801983541691151516179055565b61010082015160088601556101208201516009860155600a8501906001600160a01b036101408401511690825416179055610160810151600b8501550151910155335f52600260205260405f2090815490680100000000000000008210156108995761082a827f7ee613409a3818be8eb068049ae12d5fa12b0bb8b240a3f0488a0d2509c9fc7d94600161087d950181556116fa565b81549060031b9086821b915f19901b191617905561084960055461170f565b60055561085760045461170f565b60045561086f60405195608087526080870190611679565b908582036020870152611679565b92606435604082015262093a80420160608201528033940390a3005b634e487b7160e01b5f52604160045260245ffd5b015190508980610719565b90600385015f5260205f20915f5b601f1985168110610912575092600c94926001926101809583601f198116106108fa575b505050811b016003850155610730565b01515f1960f88460031b161c191690558980806108ea565b919260206001819286850151815501940192016108c6565b600385015f5260205f20601f840160051c810160208510610967575b601f830160051c8201811061095c5750506106f9565b5f8155600101610946565b5080610946565b0151905087806106b5565b9250600285015f5260205f20905f935b601f19841685106109cc576001945083601f198116106109b4575b505050811b0160028301556106cc565b01515f1960f88460031b161c191690558780806109a4565b81810151835560209485019460019093019290910190610989565b909150600285015f5260205f20601f840160051c810160208510610a30575b90849392915b601f830160051c82018110610a2257505061069f565b5f8155859450600101610a0c565b5080610a06565b015190508780610659565b9250600185015f5260205f20905f935b601f1984168510610a95576001945083601f19811610610a7d575b505050811b016001830155610670565b01515f1960f88460031b161c19169055878080610a6d565b81810151835560209485019460019093019290910190610a52565b909150600185015f5260205f20601f840160051c810160208510610af9575b90849392915b601f830160051c82018110610aeb575050610643565b5f8155859450600101610ad5565b5080610acf565b9091506020813d602011610b2c575b81610b1c60209383611527565b8101031261017757519086610587565b3d9150610b0f565b6040513d5f823e3d90fd5b506020813d602011610b69575b81610b5960209383611527565b81010312610177575f9051610528565b3d9150610b4c565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152602260248201527f4d696e696d756d20626964206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f5469746c652063616e6e6f7420626520656d70747900000000000000000000006044820152606490fd5b346101775760203660031901126101775760043580151580610c9d575b610c859061171d565b5f525f6020526020600b60405f200154604051908152f35b506004548110610c7c565b34610177576040366003190112610177576024356004355f52600160205260405f2090815481101561017757610cdd916116b7565b506001600160a01b038154166001820154916002810154610d34610d03600384016115d7565b60ff60056004860154950154169260405196879687526020870152604086015260c0606086015260c0850190611679565b916080840152151560a08301520390f35b34610177576020366003190112610177576004355f525f60205260405f20805460018201610d72906115d7565b91610d7f600282016115d7565b610d8b600383016115d7565b916004810154926001600160a01b03806005840154166006840154600785015460ff1690600886015492600987015494600a8801541695600b88015497600c0154986040519c8d809d6101a09182918152602001528d01610deb91611679565b8c810360408e0152610dfc91611679565b8b810360608d0152610e0d91611679565b9860808b015260a08a015260c0890152151560e08801526101008701526101208601526101408501526101608401526101808301520390f35b60803660031901126101775760243515156024350361017757604480359060643567ffffffffffffffff811161017757610e84903690600401611549565b91600435151580611406575b610e999061171d565b6004355f525f60205260ff600760405f20015416156113c2576004355f525f602052600860405f20015442101561137e576004355f525f602052600460405f200154811061133a578034106112f6575f9060043582528160205260408220906001600160a01b03907fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60190602083835416876040518098819367ffffffffffffffff639cd07acb60e01b97888552166004840152600560248401525af1948515610b34575f956112bf575b5060ff9560209291602435156112b6575f856001945b5416604051998a95869485521660048401528160248401525af1938415610b34575f94611282575b50610fac3084611769565b610fb63085611769565b610fc03384611769565b610fca3385611769565b6004355f52600160205260405f206040519060c0820182811067ffffffffffffffff8211176108995760405233825260208201858152604083019087825260608401928984524260808601525f60a08601528054680100000000000000008110156108995761103e916001820181556116b7565b95909561126f5784511673ffffffffffffffffffffffffffffffffffffffff198654161785555160018501555160028401555180519067ffffffffffffffff821161089957611090600385015461159f565b601f811161122b575b50602090601f83116001146111b657928260059360a0936110f497965f926111ab575b50508160011b915f199060031b1c19161760038501555b608081015160048501550151151591019060ff801983541691151516179055565b600b8101611102815461170f565b9055335f52600360205260405f206004355f5260205260405f20600160ff19825416179055602435611178575b8361114560405191604083526040830190611679565b4260208301527f6b2bb881d5dc46b346ff12ca5b8dc9e337a56cf5d6137d55d8317ef2060f9cbc339280600435930390a3005b600c916009820155600a81013373ffffffffffffffffffffffffffffffffffffffff19825416179055015581808061112f565b015190508b806110bc565b90600385015f5260205f20915f5b601f198516811061121357508360a0936110f4979693600193600597601f198116106111fb575b505050811b0160038501556110d3565b01515f1960f88460031b161c191690558b80806111eb565b919260206001819286850151815501940192016111c4565b600385015f5260205f20601f840160051c810160208510611268575b601f830160051c8201811061125d575050611099565b5f8155600101611247565b5080611247565b634e487b7160e01b5f525f60045260245ffd5b9093506020813d6020116112ae575b8161129e60209383611527565b8101031261017757519285610fa1565b3d9150611291565b5f858194610f79565b919094506020823d6020116112ee575b816112dc60209383611527565b810103126101775790519360ff610f63565b3d91506112cf565b60405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e74207061796d656e7400000000000000000000000081840152606490fd5b60405162461bcd60e51b815260206004820152600b60248201527f42696420746f6f206c6f7700000000000000000000000000000000000000000081840152606490fd5b60405162461bcd60e51b815260206004820152601160248201527f41756374696f6e2068617320656e64656400000000000000000000000000000081840152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f41756374696f6e206973206e6f7420616374697665000000000000000000000081840152606490fd5b5060048054903510610e90565b34610177575f3660031901126101775730330361144a575f80808047818115611441575b3390f115610b3457005b506108fc611437565b60405162461bcd60e51b815260206004820152601360248201527f4f6e6c7920636f6e7472616374206f776e6572000000000000000000000000006044820152606490fd5b34610177575f366003190112610177576020600554604051908152f35b34610177575f366003190112610177575f6001906001600454905b8181106114e1576040836005549082519182526020820152f35b8084915f525f60205260405f2060ff6007820154169081611519575b50611509575b016114c7565b926115139061170f565b92611503565b6008915001544210866114fd565b90601f8019910116810190811067ffffffffffffffff82111761089957604052565b81601f820112156101775780359067ffffffffffffffff8211610899576040519261157e601f8401601f191660200185611527565b8284526020838301011161017757815f926020809301838601378301015290565b90600182811c921680156115cd575b60208310146115b957565b634e487b7160e01b5f52602260045260245ffd5b91607f16916115ae565b9060405191825f82546115e98161159f565b908184526020946001916001811690815f146116575750600114611619575b50505061161792500383611527565b565b5f90815285812095935091905b81831061163f57505061161793508201015f8080611608565b85548884018501529485019487945091830191611626565b9250505061161794925060ff191682840152151560051b8201015f8080611608565b91908251928382525f5b8481106116a3575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611683565b80548210156116d0575f52600660205f20910201905f90565b634e487b7160e01b5f52603260045260245ffd5b600435906001600160a01b038216820361017757565b80548210156116d0575f5260205f2001905f90565b5f198114610b715760010190565b1561172457565b60405162461bcd60e51b815260206004820152601260248201527f496e76616c69642061756374696f6e20494400000000000000000000000000006044820152606490fd5b6001600160a01b0391827fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6005416803b15610177575f92836044926040519687958694635ca4b5b160e11b865260048601521660248401525af18015610b34576117cf5750565b67ffffffffffffffff81116108995760405256fea164736f6c6343000818000a";

type ConfidentialAuctionRealConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialAuctionRealConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialAuctionReal__factory extends ContractFactory {
  constructor(...args: ConfidentialAuctionRealConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfidentialAuctionReal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialAuctionReal__factory {
    return super.connect(runner) as ConfidentialAuctionReal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialAuctionRealInterface {
    return new Interface(_abi) as ConfidentialAuctionRealInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialAuctionReal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialAuctionReal;
  }
}
